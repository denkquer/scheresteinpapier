{"version":3,"sources":["components/Card.tsx","components/Player.tsx","components/Referee.tsx","game/choices/Choice.ts","game/choices/Paper.ts","game/choices/Scissors.ts","game/choices/Rock.ts","game/strategies/PickSameChoice.ts","game/strategies/PickRandomChoice.ts","App.tsx","index.tsx"],"names":["Card","headline","body","nenner","zaehler","buttonOnClick","buttonLabel","className","style","whiteSpace","type","onClick","PlayerCard","name","wonGames","totalGames","description","toString","RefereeCard","draws","buttonHandler","Choice","label","winsAgainst","opponent","this","includes","Paper","ROCK","Scissors","Rock","PickSameChoice","choice","toUpperCase","slice","draw","PickRandomChoice","choices","Math","floor","random","length","App","props","state","firstPlayer","secondPlayer","playRound","roundResult","beats","results","setState","prev","totalRounds","playGame","i","setTimeout","Fragment","Player","Referee","href","rel","target","Date","getFullYear","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8d9e56f.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport interface CardProps {\n  headline: string;\n  body?: string;\n  nenner?: string;\n  zaehler?: string;\n  buttonOnClick?(event?: React.MouseEvent): any;\n  buttonLabel?: string;\n}\n\n/**Card Template module.\n *\n * Displays a Button when both `buttonOnClick` and `buttonLabel` props are truthy.\n */\nconst Card: React.SFC<CardProps> = ({ headline, body, nenner, zaehler, buttonOnClick, buttonLabel }) => {\n  return (\n    <React.Fragment>\n      <div className=\"card mb-4 shadow-sm\">\n        <div className=\"card-header\">\n          <h4 className=\"my-0 font-weight-normal\">{headline}</h4>\n        </div>\n        <div className=\"card-body\" style={{ whiteSpace: 'pre-line' }}>\n          <h1 className=\"card-title pricing-card-title\">\n            <small>\n              {nenner}&nbsp;/&nbsp;{zaehler}\n            </small>\n          </h1>\n          {body ? <p>{body}</p> : null}\n          {buttonLabel && buttonOnClick ? (\n            <button type=\"button\" className=\"btn btn-lg btn-block btn-outline-primary\" onClick={buttonOnClick}>\n              {buttonLabel}\n            </button>\n          ) : null}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n","import * as React from 'react';\nimport Card from './Card';\n\nexport interface PlayerCardProps {\n  name: string;\n  wonGames: number;\n  totalGames: number;\n  description?: string;\n}\n\nconst PlayerCard = ({ name, wonGames, totalGames, description }: PlayerCardProps) => {\n  return (\n    <Card\n      headline={'Spieler ' + name}\n      body={description ? description : ''}\n      nenner={'Gewonnen: \\n' + wonGames.toString()}\n      zaehler={totalGames.toString() + ' Spielen'}\n    ></Card>\n  );\n};\n\nexport default PlayerCard;\n","import * as React from 'react';\nimport Card from './Card';\n\nexport interface RefereeCardProps {\n  draws: number;\n  totalGames: number;\n  description?: string;\n  buttonHandler?(event?: React.MouseEvent): any;\n}\n\nconst RefereeCard = ({ draws, totalGames, description, buttonHandler }: RefereeCardProps) => {\n  return (\n    <Card\n      headline={'Schiedsrichter'}\n      nenner={'Unentschieden: \\n' + draws.toString()}\n      zaehler={totalGames.toString() + ' Spielen'}\n      buttonLabel=\"Neues Spiel\"\n      buttonOnClick={buttonHandler}\n    ></Card>\n  );\n};\n\nexport default RefereeCard;\n","import { ROCK } from './Rock';\nimport { PAPER } from './Paper';\nimport { SCISSORS } from './Scissors';\n\ntype ChoiceLabel = typeof ROCK | typeof PAPER | typeof SCISSORS;\n\n/**All Choices inherit these properties and methods.\n *\n * A decision was made to use an Array for the `winsAgainst` argument\n * instead of a basic type to allow for easier extension of the ruleset in the future.\n */\nexport abstract class Choice {\n  constructor(readonly label: ChoiceLabel, readonly winsAgainst: ChoiceLabel[]) {}\n  /**Returns `0` when choices are equal. Negative when the arguments choice is winning. Positive otherwise.\n   * Like `compareTo()` in __java__ ;)\n   * @param opponent Some Opponents `Choice`\n   */\n  beats(opponent: Choice) {\n    if (this.label === opponent.label) return 0;\n    return this.winsAgainst.includes(opponent.label) ? 1 : -1;\n  }\n}\n","import { ROCK } from './Rock';\nimport { Choice } from './Choice';\n\nexport const PAPER = 'papier';\n\nexport class Paper extends Choice {\n  constructor() {\n    super(PAPER, [ROCK]);\n  }\n}\n","import { Choice } from './Choice';\nimport { PAPER } from './Paper';\n\nexport const SCISSORS = 'schere';\n\nexport class Scissors extends Choice {\n  constructor() {\n    super(SCISSORS, [PAPER]);\n  }\n}\n","import { Choice } from './Choice';\nimport { SCISSORS } from './Scissors';\n\nexport const ROCK = 'stein';\n\nexport class Rock extends Choice {\n  constructor() {\n    super(ROCK, [SCISSORS]);\n  }\n}\n","import { Choice } from '../choices/Choice';\nimport { Strategy } from './Strategy';\n\n/**Returns the provided `Choice`.*/\nexport class PickSameChoice implements Strategy {\n  constructor(readonly choice: Choice) {}\n  description = `Wählt immer ${this.choice.label[0].toUpperCase() + this.choice.label.slice(1)}.`;\n  draw = () => this.choice;\n}\n","import { Choice } from '../choices/Choice';\nimport { Strategy } from './Strategy';\n\n/**Returns a _pseudo randomly_ choosen `Choice` out of the `Choice[]` provided by the argument*/\nexport class PickRandomChoice implements Strategy {\n  constructor(readonly choices: Choice[]) {}\n  description = `Wählt immer zufällig.`;\n  draw = () => this.choices[Math.floor(Math.random() * this.choices.length)];\n}\n","import React from 'react';\nimport './App.scss';\nimport PlayerCard from './components/Player';\nimport RefereeCard from './components/Referee';\nimport { PickSameChoice, PickRandomChoice, Paper, Rock, Scissors } from './game';\nimport { Strategy } from './game/strategies/Strategy';\n\nexport interface AppProps {}\n\nexport interface AppState {\n  results: Results;\n  totalRounds: number;\n}\n\ninterface Results {\n  firstPlayer: number;\n  secondPlayer: number;\n  draw: number;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  private firstPlayer: Strategy;\n  private secondPlayer: Strategy;\n  constructor(props: AppProps, state: AppState) {\n    super(props, state);\n    // assigning a strategy to our players\n    this.firstPlayer = new PickSameChoice(new Paper());\n    this.secondPlayer = new PickRandomChoice([new Paper(), new Rock(), new Scissors()]);\n    //setting up state\n    this.state = { results: { firstPlayer: 0, secondPlayer: 0, draw: 0 }, totalRounds: 0 };\n  }\n\n  playRound = () => {\n    // This implementation skips the procedure of revealing each others choices (at the same time),\n    // because none of the available strategies include cheating ;)\n    const roundResult = this.firstPlayer.draw().beats(this.secondPlayer.draw());\n    const state = { ...this.state }; // cloning state\n    if (roundResult === 0) state.results.draw++;\n    if (roundResult < 0) state.results.secondPlayer++;\n    if (roundResult > 0) state.results.firstPlayer++;\n    this.setState((prev, props) => ({ results: state.results, totalRounds: prev.totalRounds + 1 }));\n  };\n\n  playGame = () => {\n    this.setState({ results: { firstPlayer: 0, secondPlayer: 0, draw: 0 }, totalRounds: 0 });\n    for (let i: number = 0; i < 100; i++) {\n      //disable react setState batching for dramatic effect :) ...cpu glüht\n      setTimeout(this.playRound);\n    }\n  };\n\n  render() {\n    const { totalRounds, results } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n          <h5 className=\"my-0 mr-md-auto font-weight-normal\">Schere Stein Papier</h5>\n        </div>\n        <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n          <h1 className=\"display-4\">Schere Stein Papier</h1>\n          <p className=\"lead\">\n            • Schere schlägt Papier • Stein schlägt Schere • Papier schlägt Stein • Wenn beide Spieler dasselbe wählen, gilt die Runde als\n            unentschieden.\n          </p>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"card-deck mb-3 text-center\">\n            <PlayerCard name=\"A\" wonGames={results.firstPlayer} totalGames={totalRounds} description={this.firstPlayer.description}></PlayerCard>\n            <RefereeCard buttonHandler={this.playGame} draws={results.draw} totalGames={totalRounds}></RefereeCard>\n            <PlayerCard\n              name=\"B\"\n              wonGames={results.secondPlayer}\n              totalGames={totalRounds}\n              description={this.secondPlayer.description}\n            ></PlayerCard>\n          </div>\n\n          <footer className=\"pt-4 my-md-5 pt-md-5 border-top\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md\">\n                <small className=\"d-block mb-3 text-muted\">\n                  Dieses Designtemplate wurde ursprünglich von Mark Otto, Jacob Thornton und weiteren Bootstrap Contributors erstellt und als\n                  Beispiel und Vorlage auf{' '}\n                  <a href=\"https://getbootstrap.com/docs/4.4/examples/pricing/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    getBootstrap.com\n                  </a>{' '}\n                  für jeden frei zur Verfügung gestellt. &copy; Tom Lukas Thiemann&nbsp;&nbsp;{new Date().getFullYear()}\n                </small>\n                <small className=\"d-block mb-3 text-muted\"></small>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}